// File: src/app/api/sourcing/[needId]/route.ts

import { NextRequest, NextResponse } from 'next/server'
import { createClient } from '@supabase/supabase-js'

// Use your service role key here so you can update/delete freely
const supabaseAdmin = createClient(
  process.env.NEXT_PUBLIC_SUPABASE_URL!,
  process.env.SUPABASE_SERVICE_ROLE_KEY!
)

export async function GET(
  _req: NextRequest,
  { params }: { params: { needId: string } }
) {
  const { data, error } = await supabaseAdmin
    .from('needs')
    .select('id, title, description, quantity')
    .eq('id', params.needId)
    .single()

  if (error) {
    return NextResponse.json({ error: error.message }, { status: 500 })
  }
  return NextResponse.json(data)
}

export async function PATCH(
  req: NextRequest,
  { params }: { params: { needId: string } }
) {
  const { title, description, quantity } = await req.json()

  const { error } = await supabaseAdmin
    .from('needs')
    .update({ title, description, quantity })
    .eq('id', params.needId)

  if (error) {
    return NextResponse.json({ error: error.message }, { status: 500 })
  }
  return NextResponse.json({ success: true })
}

export async function DELETE(
  _req: NextRequest,
  { params }: { params: { needId: string } }
) {
  const { error } = await supabaseAdmin
    .from('needs')
    .delete()
    .eq('id', params.needId)

  if (error) {
    return NextResponse.json({ error: error.message }, { status: 500 })
  }
  return NextResponse.json({ success: true })
}
